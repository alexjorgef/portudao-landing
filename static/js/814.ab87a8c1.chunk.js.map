{"version":3,"file":"static/js/814.ab87a8c1.chunk.js","mappings":"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","sources":["api/poap.ts","components/Events/NFTListCard.tsx","components/Events/NFTList.tsx","views/Events.tsx"],"sourcesContent":["// libraries\nimport axios from 'axios';\n\nconst getEvents = async (query: string) => {\n  const path = `https://api.poap.xyz/events?name=${query}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get events service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nconst getEvent = async (id: string) => {\n  const path = `https://api.poap.xyz/events/id/${id}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get event service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nconst getEventPoaps = async (eventId: string) => {\n  const path = `https://api.poap.xyz/event/${eventId}/poaps?limit=100`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get event service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nconst getToken = async (id: string) => {\n  const path = `https://api.poap.xyz/token/${id}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get event service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nconst getTokens = async (address: string) => {\n  const path = `https://api.poap.xyz/actions/scan/${address}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get tokens service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nexport { getEvent, getEvents, getToken, getTokens, getEventPoaps };\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Card, Typography, Rating } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport spacing from 'theme/spacing';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AvatarPlaceholder from 'icons/AvatarPlaceholder.png';\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  width: '50%';\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  hover {\r\n    overflow: visible;\r\n  }\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: #f7f7f8;\r\n  border: 1px solid #f0f0f1;\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 16px;\r\n  padding: ${spacing.md}px;\r\n  height: 120px;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledImg = styled('img')({\r\n  width: '50%',\r\n});\r\n\r\n// @ts-ignore\r\nexport default function NFTListCard({ event }) {\r\n  const { id, name, start_date, image_url } = event;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const goToNFTView = () => navigate(`/event/${id}`);\r\n\r\n  return (\r\n    <StyledCard\r\n      onClick={() => {\r\n        goToNFTView();\r\n      }}\r\n    >\r\n      <Box display=\"flex\">\r\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" width=\"50%\">\r\n          <StyledTypography variant=\"h6\">{`${name}`}</StyledTypography>\r\n\r\n          <StyledTypography variant=\"body1\">{`${start_date}`}</StyledTypography>\r\n        </Box>\r\n        {image_url ? (\r\n          <StyledImg src={image_url} alt=\"\" />\r\n        ) : (\r\n          <StyledImg src={AvatarPlaceholder} alt=\"\" />\r\n        )}\r\n      </Box>\r\n    </StyledCard>\r\n  );\r\n}\r\n","import { Grid } from '@mui/material';\r\nimport NFTListCard from './NFTListCard';\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n// eslint-disable-next-line react/prop-types\r\nexport default function NFTList({ events }) {\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {\r\n        // @ts-ignore\r\n        // eslint-disable-next-line react/prop-types\r\n        events.map((event) => (\r\n          <Grid key={event.fancy_id} item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n            <NFTListCard event={event} />\r\n          </Grid>\r\n        ))\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Typography } from '@mui/material';\n\nimport styled from 'styled-components';\nimport spacing from 'theme/spacing';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getEvents } from 'api/poap';\nimport NFTList from 'components/Events/NFTList';\n\nconst Container = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  margin-right: ${spacing.xxl}px;\n  margin-left: ${spacing.xxl}px;\n  margin-top: ${spacing.xxl}px;\n  margin-bottom: ${spacing.lg}px;\n  min-height: calc(100vh - 168px);\n`;\n\nconst StyledBox = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${spacing.lg}px;\n`;\n\nexport default function Landing(): JSX.Element {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const events = await getEvents('portudao');\n      if (events) setRows(events);\n    };\n    fetchEvents();\n  }, []);\n\n  const sortedEvents = useMemo(() => {\n    // @ts-ignore\n    return rows.sort((a, b) => {\n      // @ts-ignore\n      const aStartDate = new Date(a.start_date.replace('-', ' '));\n      // @ts-ignore\n      const bStartDate = new Date(b.start_date.replace('-', ' '));\n      // @ts-ignore\n      if (aStartDate > bStartDate) return 1;\n      if (aStartDate < bStartDate) return -1;\n      return 0;\n    });\n  }, [rows]);\n\n  return (\n    <Container>\n      <StyledBox>\n        <Typography variant=\"h4\"> All Events </Typography>\n        <AiFillPlusCircle\n          style={{\n            width: '50px',\n            height: '50px',\n            color: '#3E7CB1',\n          }}\n        />\n      </StyledBox>\n\n      <NFTList events={sortedEvents} />\n    </Container>\n  );\n}\n"],"names":["getEvents","query","path","axios","res","console","log","data","getEvent","id","getEventPoaps","eventId","getToken","getTokens","address","StyledTypography","styled","Typography","StyledCard","Card","spacing","StyledImg","width","NFTListCard","event","name","start_date","image_url","navigate","useNavigate","onClick","Box","display","flexDirection","justifyContent","variant","src","alt","AvatarPlaceholder","NFTList","events","Grid","container","map","item","xs","sm","md","lg","xl","fancy_id","Container","StyledBox","Landing","useState","rows","setRows","useEffect","fetchEvents","sortedEvents","useMemo","sort","a","b","aStartDate","Date","replace","bStartDate","style","height","color"],"sourceRoot":""}