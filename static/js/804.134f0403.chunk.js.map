{"version":3,"file":"static/js/804.134f0403.chunk.js","mappings":"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","sources":["components/POAP/Events.tsx","api/poap.tsx","views/POAP.tsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { TableHead } from '@mui/material';\n\n// @ts-ignore\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  // @ts-ignore\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  // @ts-ignore\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  // @ts-ignore\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  // @ts-ignore\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\ninterface Props {\n  rows: any;\n}\n\nexport default function Events({ rows }: Props) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  // @ts-ignore\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // @ts-ignore\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const tableHeaders = [\n    'Country',\n    'Name',\n    'Description',\n    'Start date',\n    'End date',\n    'Expiry date',\n    'Fancy name',\n    'Image',\n    'Virtual event',\n    'Private event',\n  ];\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 500 }}>\n        <TableHead>\n          <TableRow>\n            {tableHeaders.map((th) => (\n              <TableCell align=\"center\" style={{ width: 160 }}>\n                {th}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          )\n            // @ts-ignore\n            .map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" align=\"center\">\n                  {row.country}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"left\">\n                  {row.name}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"left\">\n                  {row.description}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.start_date}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.end_date}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.expiry_date}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.fancy_id}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <img src={row.image_url} alt=\"\" style={{ width: 160 }} />\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.virtual_event ? 'yes' : 'no'}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.private_event ? 'yes' : 'no'}\n                </TableCell>\n              </TableRow>\n            ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","// libraries\nimport axios from 'axios';\n\nconst getEvents = async (query: string) => {\n  const path = `https://api.poap.xyz/events?name=${query}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get events service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nexport default getEvents;\n","import { Box, Typography } from '@mui/material';\n\nimport styled from 'styled-components';\nimport spacing from 'theme/spacing';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport Events from 'components/POAP/Events';\nimport getEvents from 'api/poap';\n\nconst Container = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  margin-right: ${spacing.xxxl}px;\n  margin-left: ${spacing.xxxl}px;\n  margin-top: ${spacing.xxl}px;\n`;\n\nconst StyledBox = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${spacing.lg}px;\n`;\n\nexport default function Landing(): JSX.Element {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const events = await getEvents('portudao');\n      if (events) setRows(events);\n    };\n    fetchEvents();\n  }, []);\n  return (\n    <Container>\n      <StyledBox>\n        <Typography variant=\"h4\"> Events </Typography>\n        <AiFillPlusCircle\n          style={{\n            width: '50px',\n            height: '50px',\n            color: '#3E7CB1',\n          }}\n        />\n      </StyledBox>\n\n      <Events rows={rows} />\n    </Container>\n  );\n}\n"],"names":["TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","Box","sx","flexShrink","ml","IconButton","onClick","event","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","Events","rows","React","setPage","setRowsPerPage","emptyRows","length","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","map","th","TableCell","align","style","width","TableBody","slice","row","country","name","description","start_date","end_date","expiry_date","fancy_id","src","image_url","alt","virtual_event","private_event","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","getEvents","query","path","axios","res","console","log","data","Container","styled","spacing","StyledBox","Landing","useState","setRows","useEffect","fetchEvents","events","Typography","variant","color"],"sourceRoot":""}