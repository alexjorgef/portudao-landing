{"version":3,"file":"static/js/814.3665e710.chunk.js","mappings":"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","sources":["api/poap.tsx","components/Events/NFTListCard.tsx","components/Events/NFTList.tsx","views/Events.tsx"],"sourcesContent":["// libraries\r\nimport axios from 'axios';\r\n\r\nconst getEvents = async (query: string) => {\r\n  const path = `https://api.poap.xyz/events?name=${query}`;\r\n  const res = await axios.get(path);\r\n  if (res) {\r\n    console.log('Get events service:', res);\r\n    return res.data;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getEvent = async (id: string) => {\r\n  const path = `https://api.poap.xyz/events/id/${id}`;\r\n  const res = await axios.get(path);\r\n  if (res) {\r\n    console.log('Get event service:', res);\r\n    return res.data;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getToken = async (id: string) => {\r\n  const path = `https://api.poap.xyz/token/${id}`;\r\n  const res = await axios.get(path);\r\n  if (res) {\r\n    console.log('Get event service:', res);\r\n    return res.data;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { getEvent, getEvents, getToken };\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Card, Typography, Rating } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport spacing from 'theme/spacing';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AvatarPlaceholder from 'icons/AvatarPlaceholder.png';\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: #f7f7f8;\r\n  border: 1px solid #f0f0f1;\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 16px;\r\n  padding: ${spacing.md}px;\r\n`;\r\n\r\nconst StyledImg = styled('img')({\r\n  top: 0,\r\n  right: 0,\r\n  width: 'auto',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n});\r\n\r\n// @ts-ignore\r\nexport default function NFTListCard({ event }) {\r\n  const { id, name, start_date, image_url } = event;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const goToNFTView = () => navigate(`/event/${id}`);\r\n\r\n  return (\r\n    <StyledCard\r\n      onClick={() => {\r\n        goToNFTView();\r\n      }}\r\n    >\r\n      <Box sx={{ position: 'relative', height: '100px' }}>\r\n        <Box display=\"flex\" flexDirection=\"column\" height=\"100%\" justifyContent=\"space-between\">\r\n          <Typography variant=\"h6\">{`${name}`}</Typography>\r\n          {/* @ts-ignore */}\r\n          <Box display=\"flex\" flexDirection=\"column\">\r\n            <Typography variant=\"body1\">{`Start date: ${start_date}`}</Typography>\r\n          </Box>\r\n        </Box>\r\n        {image_url ? (\r\n          <StyledImg src={image_url} alt=\"\" />\r\n        ) : (\r\n          <StyledImg src={AvatarPlaceholder} alt=\"\" />\r\n        )}\r\n      </Box>\r\n    </StyledCard>\r\n  );\r\n}\r\n","import { Grid } from '@mui/material';\r\nimport NFTListCard from './NFTListCard';\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n// eslint-disable-next-line react/prop-types\r\nexport default function NFTList({ events }) {\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {\r\n        // @ts-ignore\r\n        // eslint-disable-next-line react/prop-types\r\n        events.map((event) => (\r\n          <Grid key={event.fancy_id} item sm={12} md={6} lg={4} xl={4}>\r\n            <NFTListCard event={event} />\r\n          </Grid>\r\n        ))\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\n\r\nimport styled from 'styled-components';\r\nimport spacing from 'theme/spacing';\r\nimport { AiFillPlusCircle } from 'react-icons/ai';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { getEvents } from 'api/poap';\r\nimport NFTList from 'components/Events/NFTList';\r\n\r\nconst Container = styled(Box)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: ${spacing.xxl}px;\r\n  margin-left: ${spacing.xxl}px;\r\n  margin-top: ${spacing.xxl}px;\r\n`;\r\n\r\nconst StyledBox = styled(Box)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: ${spacing.lg}px;\r\n`;\r\n\r\nexport default function Landing(): JSX.Element {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const events = await getEvents('portudao');\r\n      if (events) setRows(events);\r\n    };\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const sortedEvents = useMemo(() => {\r\n    // @ts-ignore\r\n    return rows.sort((a, b) => {\r\n      // @ts-ignore\r\n      const aStartDate = new Date(a.start_date.replace('-', ' '));\r\n      // @ts-ignore\r\n      const bStartDate = new Date(b.start_date.replace('-', ' '));\r\n      // @ts-ignore\r\n      if (aStartDate > bStartDate) return 1;\r\n      if (aStartDate < bStartDate) return -1;\r\n      return 0;\r\n    });\r\n  }, [rows]);\r\n\r\n  return (\r\n    <Container>\r\n      <StyledBox>\r\n        <Typography variant=\"h4\"> All Events </Typography>\r\n        <AiFillPlusCircle\r\n          style={{\r\n            width: '50px',\r\n            height: '50px',\r\n            color: '#3E7CB1',\r\n          }}\r\n        />\r\n      </StyledBox>\r\n\r\n      <NFTList events={sortedEvents} />\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["getEvents","query","path","axios","res","console","log","data","getEvent","id","getToken","StyledCard","styled","Card","spacing","StyledImg","top","right","width","height","objectFit","position","NFTListCard","event","name","start_date","image_url","navigate","useNavigate","onClick","Box","sx","display","flexDirection","justifyContent","Typography","variant","src","alt","AvatarPlaceholder","NFTList","events","Grid","container","map","item","sm","md","lg","xl","fancy_id","Container","StyledBox","Landing","useState","rows","setRows","useEffect","fetchEvents","sortedEvents","useMemo","sort","a","b","aStartDate","Date","replace","bStartDate","style","color"],"sourceRoot":""}