{"version":3,"file":"static/js/643.78a7349b.chunk.js","mappings":"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","sources":["api/poap.tsx","components/Event/EventCard.tsx","views/Event.tsx"],"sourcesContent":["// libraries\nimport axios from 'axios';\n\nconst getEvents = async (query: string) => {\n  const path = `https://api.poap.xyz/events?name=${query}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get events service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nconst getEvent = async (id: string) => {\n  const path = `https://api.poap.xyz/events/id/${id}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get event service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nconst getToken = async (id: string) => {\n  const path = `https://api.poap.xyz/token/${id}`;\n  const res = await axios.get(path);\n  if (res) {\n    console.log('Get event service:', res);\n    return res.data;\n  }\n  return false;\n};\n\nexport { getEvent, getEvents, getToken };\n","/* eslint-disable react/prop-types */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { Box, Card, Typography, Rating, Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport spacing from 'theme/spacing';\nimport { useNavigate } from 'react-router-dom';\nimport AvatarPlaceholder from 'icons/AvatarPlaceholder.png';\nimport { AiOutlineCloseCircle, AiOutlineCheck } from 'react-icons/ai';\n\nconst StyledCard = styled(Card)`\n  background: #f7f7f8;\n  border: 1px solid #f0f0f1;\n  backdrop-filter: blur(20px);\n  border-radius: 16px;\n  display: flex;\n  padding: ${spacing.md}px;\n  flex-direction: column;\n`;\n\nconst Container = styled(Box)`\n  display: flex;\n  width: 100%;\n`;\n\n// @ts-ignore\nexport default function NFTListCard({ event }) {\n  const {\n    name,\n    start_date,\n    end_date,\n    expiry_date,\n    country,\n    description,\n    fancy_id,\n    virtual_event,\n    private_event,\n    image_url,\n  } = event;\n\n  return (\n    <Container>\n      <Grid container spacing={4}>\n        <Grid key={event.fancy_id} item xs={12} sm={12} md={6} lg={6} xl={6}>\n          <StyledCard>\n            <Typography variant=\"h5\">{`${name}`}</Typography>\n            <Typography variant=\"h6\">{`${description}`}</Typography>\n            <img src={image_url} alt=\"\" style={{ maxWidth: '350px', borderRadius: '12px' }} />\n          </StyledCard>\n        </Grid>\n        <Grid key={event.fancy_id} item xs={12} sm={12} md={6} lg={6} xl={6}>\n          <StyledCard>\n            <Typography variant=\"h5\">{`${country}`}</Typography>\n            <Typography variant=\"h5\">{`Start Date: ${start_date}`}</Typography>\n            <Typography variant=\"h5\">{`End Date: ${end_date}`}</Typography>\n            <Typography variant=\"h5\">{`Expiry Date: ${expiry_date}`}</Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography variant=\"h5\">Virtual Event</Typography>\n              <AiOutlineCheck />\n            </Box>\n            <Box display=\"flex\" justify-content=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"h5\" style={{ color: 'black' }}>\n                Private Event\n              </Typography>\n              <AiOutlineCloseCircle />\n            </Box>\n          </StyledCard>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { Box, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { getEvent } from 'api/poap';\nimport styled from 'styled-components';\nimport EventCard from 'components/Event/EventCard';\nimport spacing from 'theme/spacing';\n\nconst Container = styled(Box)`\n  min-height: calc(100vh - 168px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: ${spacing.xxl}px;\n  margin-left: ${spacing.xxl}px;\n  margin-top: ${spacing.xxl}px;\n  margin-bottom: ${spacing.lg}px;\n`;\n\nexport default function Event(): JSX.Element {\n  const [event, setEvent] = useState(null);\n  const { eventId } = useParams();\n\n  useEffect(() => {\n    const fetchEvent = async () => {\n      // @ts-ignore\n      const res = await getEvent(eventId);\n      if (res) {\n        setEvent(res);\n      }\n    };\n    fetchEvent();\n  }, []);\n\n  return <Container>{event && <EventCard event={event} />}</Container>;\n}\n"],"names":["getEvents","query","path","axios","res","console","log","data","getEvent","id","getToken","StyledCard","styled","Card","spacing","Container","Box","NFTListCard","event","name","start_date","end_date","expiry_date","country","description","image_url","fancy_id","virtual_event","private_event","Grid","container","item","xs","sm","md","lg","xl","Typography","variant","src","alt","style","maxWidth","borderRadius","display","alignItems","color","Event","useState","setEvent","eventId","useParams","useEffect","fetchEvent"],"sourceRoot":""}